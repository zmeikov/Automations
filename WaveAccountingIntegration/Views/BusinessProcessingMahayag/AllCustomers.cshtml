@model Dictionary<WaveAccountingIntegration.Models.Customer, WaveAccountingIntegration.Models.Transaction_History>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AllCustomers</title>
</head>
<body>

	<table class="table">
		<tr>
			<th>
				customer.name
			</th>
			<th>
				balance
			</th>
			<th>
				last
				<br /> Payment
				<br /> amount
			</th>
			<th>
				last Payment
				<br /> date
			</th>
			<th>
				days 
				<br /> behind
			</th>
			<th></th>
		</tr>

		@foreach (var item in Model)
		{

			var lastPayment = item.Value?.events?.Where(x => x != null && x.event_type == "payment")?.OrderByDescending(x => x.date).FirstOrDefault();
			DateTime result;
			var lastInvoice = item.Value?.events?
				.Where(x => x != null && x.event_type == "invoice" && (x.invoice.invoice_amount_due <= 65 && DateTime.Parse(x.invoice.invoice_date) <= DateTime.Now))?
				.OrderByDescending(x => x.date).FirstOrDefault();

			if (lastInvoice == null)
			{
				lastInvoice = item.Value?.events?
					.Where(x => x != null && x.event_type == "invoice")?
					.OrderByDescending(x => x.date).FirstOrDefault();
			}

			var daysSinceLastFullyPaidInvoice = DateTime.Now -
				(DateTime.TryParse(lastInvoice?.invoice.due_date, out result)
						?
							result
						:
							DateTime.MinValue
				);

			if(item.Value?.events?
				.Where(x => x != null && x.event_type == "invoice").Count() == 1 && item.Value?.events?
				.Where(x => x != null && x.event_type == "invoice").First().invoice.invoice_amount_due > 0)
			{
				daysSinceLastFullyPaidInvoice = DateTime.Now -
				(DateTime.TryParse(lastInvoice?.invoice.invoice_date, out result)
						?
							result
						:
							DateTime.MinValue
				);
			}

			<tr>
				<td>
					| @Html.DisplayFor(modelItem => item.Key.name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Value.ending_balance)
				</td>
				<td>
					| @(lastPayment?.total)
				</td>
				<td>
					| @(lastPayment?.date.Value.ToISODateFormat())
				</td>
				<td>
					| @if (daysSinceLastFullyPaidInvoice.Days < 10000)
					{ @(daysSinceLastFullyPaidInvoice.Days) }
				</td>
				<td>
					@Html.ActionLink("Ledger", "Ledger", new { item.Key.id })
				</td>
			</tr>
		}
	</table>
</body>
</html>
