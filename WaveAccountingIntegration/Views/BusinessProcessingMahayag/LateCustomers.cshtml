@model Dictionary<WaveAccountingIntegration.Models.Customer, WaveAccountingIntegration.Models.Transaction_History>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>LateCustomers</title>
</head>
<body>

	<table class="table">
		<tr>
			<th>
				customer.name
			</th>
			<th>
				balance
			</th>
			<th>
				last Payment <br /> amount
			</th>
			<th>
				last Payment <br /> date
			</th>

			<th></th>
		</tr>

		@foreach (var item in Model)
		{

			try
			{
				if (item.Value?.events == null)
				{

				}

				var lastPayment = item.Value?.events?.Where(x => x != null && x.event_type == "payment")?.OrderByDescending(x => x.date).FirstOrDefault();

				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Key.name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Value.ending_balance)
					</td>
					<td>
						@(lastPayment?.total)
					</td>
					<td>
						@(lastPayment?.date.Value.ToISODateFormat())
					</td>
					<td>
						@Html.ActionLink("EvictionDocs", "EvictionDocs", new { item.Key.id })
					</td>

				</tr>
			}
			catch(Exception ex)
			{

			}

		}

	</table>
</body>
</html>
